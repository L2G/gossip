#!/usr/bin/env ruby

#  Created by Brian Marick on 2007-09-15.
#  Copyright (c) 2007. All rights reserved.

set_script_lib_path(__FILE__)

require 'gossip'
include Gossip

# You may want to replace this. See the installation documentation.
require 'gossip/site-config'

class Fanout < GossipCommand
  
  def script_config_file; ".fanoutrc"; end
  
  def usage
    ["Usage: ruby #{$0} arg... < details",
    "The arguments are the scandal to gossip about."]
  end
  
  

  FANOUT_DEFAULT = true  
  def add_choices_specific_to_script(builder)  
    builder.add_choice(:fanout_details,
                       :type => :boolean,
                       :default => FANOUT_DEFAULT) { | command_line |
      command_line.uses_switch("--details",
                               "Collect details from standard input?",
                               "Defaults to #{FANOUT_DEFAULT}.",
                               "If false, standard input is not read.")
    }
  end
    
      
  def postprocess_user_choices
    super

    # This is checked here, instead of giving a range to uses_arglist,
    # so that the actual choices can be printed out with -c without
    # having to give an argument.
    if @user_choices.has_key?(:arglist) && @user_choices[:arglist].empty?
      raise "You need to give some sort of summary on the command line."
    end
  end
  
  def execute
    scandal = @user_choices[:arglist].join(' ')
    details = @user_choices[:fanout_details] ? $stdin.read : ''
    preteen.tell_bffs(scandal, details) 
  end

end    

if $0 == __FILE__
  # You can replace "with" with "without" to get full stack traces.
  with_pleasant_exceptions do
    Fanout.new(Preteen.new(CronyMaker, BFFS, ON_THE_OUTS)).execute  
  end
end
